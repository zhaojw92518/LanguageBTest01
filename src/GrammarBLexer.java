// Generated from .\GrammarB.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class GrammarBLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__4=1, T__3=2, T__2=3, T__1=4, T__0=5, INT_TYPE=6, DOUBLE_TYPE=7, CHAR_TYPE=8, 
		STRING_TYPE=9, PROPOSITION_TYPE=10, SET_TYPE=11, TUPLE_TYPE=12, BOOL_TYPE=13, 
		ASSIGN_SYMBOL=14, LEFT_BRACKET=15, RIGHT_BRACKET=16, COMMA=17, SEMICOLON=18, 
		LEFT_BRACE=19, RIGHT_BRACE=20, LEFT_ANGLE_BRACKET=21, RIGHT_ANGLE_BRACKET=22, 
		CONST=23, MACHINE=24, INVARIANT=25, ATTRIBUTE=26, OPERATIONS=27, END=28, 
		VOID=29, BOOL=30, CHAR=31, STRING=32, NIL=33, INTEGER=34, REAL=35, PROPOSITION_SYMBOL_1=36, 
		PROPOSITION_SYMBOL_2=37, PROPOSITION_SYMBOL_3=38, PROPOSITION_SYMBOL_4=39, 
		ELEMENT_SET_SYMBOL=40, SET_SYMBOL_1=41, SET_SYMBOL_2=42, GRE=43, EGRE=44, 
		LES=45, ELES=46, EQU=47, UEQU=48, ADD=49, SUB=50, MUL=51, DIV=52, ID=53, 
		WS=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'while'", "'if'", "'else'", "'return'", "'|'", "'int'", "'double'", "'char'", 
		"'string'", "'proposition'", "'set'", "'tuple'", "'bool'", "'='", "'('", 
		"')'", "','", "';'", "'{'", "'}'", "'<<'", "'>>'", "'const'", "'MACHINE'", 
		"'INVARIANT'", "'ATTRIBUTE'", "'OPERATIONS'", "'END'", "'void'", "BOOL", 
		"CHAR", "STRING", "'nil'", "INTEGER", "REAL", "'~'", "'/\\'", "'\\/'", 
		"'->'", "ELEMENT_SET_SYMBOL", "SET_SYMBOL_1", "'--'", "'>'", "'>='", "'<'", 
		"'<='", "'=='", "'!='", "'+'", "'-'", "'*'", "'/'", "ID", "WS"
	};
	public static final String[] ruleNames = {
		"T__4", "T__3", "T__2", "T__1", "T__0", "INT_TYPE", "DOUBLE_TYPE", "CHAR_TYPE", 
		"STRING_TYPE", "PROPOSITION_TYPE", "SET_TYPE", "TUPLE_TYPE", "BOOL_TYPE", 
		"ASSIGN_SYMBOL", "LEFT_BRACKET", "RIGHT_BRACKET", "COMMA", "SEMICOLON", 
		"LEFT_BRACE", "RIGHT_BRACE", "LEFT_ANGLE_BRACKET", "RIGHT_ANGLE_BRACKET", 
		"CONST", "MACHINE", "INVARIANT", "ATTRIBUTE", "OPERATIONS", "END", "VOID", 
		"BOOL", "CHAR", "STRING", "NIL", "INTEGER", "REAL", "PROPOSITION_SYMBOL_1", 
		"PROPOSITION_SYMBOL_2", "PROPOSITION_SYMBOL_3", "PROPOSITION_SYMBOL_4", 
		"ELEMENT_SET_SYMBOL", "SET_SYMBOL_1", "SET_SYMBOL_2", "GRE", "EGRE", "LES", 
		"ELES", "EQU", "UEQU", "ADD", "SUB", "MUL", "DIV", "ID", "WS", "LETTER", 
		"NO_ZERO_NUM", "NUM", "CHARACTER"
	};


	public GrammarBLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "GrammarB.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 53: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\28\u0189\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\3\2\3\2\3\2"+
		"\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3"+
		"\5\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t"+
		"\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3"+
		"\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3"+
		"\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3"+
		"\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3"+
		"\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3"+
		"\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3"+
		"\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3"+
		"\37\3\37\3\37\5\37\u0114\n\37\3 \3 \3 \3 \3!\3!\7!\u011c\n!\f!\16!\u011f"+
		"\13!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\7#\u0129\n#\f#\16#\u012c\13#\3#\5#\u012f"+
		"\n#\3$\3$\3$\3$\7$\u0135\n$\f$\16$\u0138\13$\5$\u013a\n$\3%\3%\3&\3&\3"+
		"&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\5)\u014a\n)\3*\3*\3*\3*\3*\3*\5*\u0152"+
		"\n*\3+\3+\3+\3,\3,\3-\3-\3-\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3"+
		"\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\66\7\66\u0172"+
		"\n\66\f\66\16\66\u0175\13\66\3\67\6\67\u0178\n\67\r\67\16\67\u0179\3\67"+
		"\3\67\38\38\39\39\3:\3:\5:\u0184\n:\3;\3;\5;\u0188\n;\2<\3\3\1\5\4\1\7"+
		"\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33"+
		"\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1"+
		"\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1"+
		"I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64"+
		"\1g\65\1i\66\1k\67\1m8\2o\2\1q\2\1s\2\1u\2\1\3\2\5\5\2\13\f\17\17\"\""+
		"\6\2))C\\aac|\3\2\63;\u0191\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\3w\3\2\2\2\5}\3\2\2\2\7\u0080\3\2\2\2\t"+
		"\u0085\3\2\2\2\13\u008c\3\2\2\2\r\u008e\3\2\2\2\17\u0092\3\2\2\2\21\u0099"+
		"\3\2\2\2\23\u009e\3\2\2\2\25\u00a5\3\2\2\2\27\u00b1\3\2\2\2\31\u00b5\3"+
		"\2\2\2\33\u00bb\3\2\2\2\35\u00c0\3\2\2\2\37\u00c2\3\2\2\2!\u00c4\3\2\2"+
		"\2#\u00c6\3\2\2\2%\u00c8\3\2\2\2\'\u00ca\3\2\2\2)\u00cc\3\2\2\2+\u00ce"+
		"\3\2\2\2-\u00d1\3\2\2\2/\u00d4\3\2\2\2\61\u00da\3\2\2\2\63\u00e2\3\2\2"+
		"\2\65\u00ec\3\2\2\2\67\u00f6\3\2\2\29\u0101\3\2\2\2;\u0105\3\2\2\2=\u0113"+
		"\3\2\2\2?\u0115\3\2\2\2A\u0119\3\2\2\2C\u0122\3\2\2\2E\u012e\3\2\2\2G"+
		"\u0130\3\2\2\2I\u013b\3\2\2\2K\u013d\3\2\2\2M\u0140\3\2\2\2O\u0143\3\2"+
		"\2\2Q\u0149\3\2\2\2S\u0151\3\2\2\2U\u0153\3\2\2\2W\u0156\3\2\2\2Y\u0158"+
		"\3\2\2\2[\u015b\3\2\2\2]\u015d\3\2\2\2_\u0160\3\2\2\2a\u0163\3\2\2\2c"+
		"\u0166\3\2\2\2e\u0168\3\2\2\2g\u016a\3\2\2\2i\u016c\3\2\2\2k\u016e\3\2"+
		"\2\2m\u0177\3\2\2\2o\u017d\3\2\2\2q\u017f\3\2\2\2s\u0183\3\2\2\2u\u0187"+
		"\3\2\2\2wx\7y\2\2xy\7j\2\2yz\7k\2\2z{\7n\2\2{|\7g\2\2|\4\3\2\2\2}~\7k"+
		"\2\2~\177\7h\2\2\177\6\3\2\2\2\u0080\u0081\7g\2\2\u0081\u0082\7n\2\2\u0082"+
		"\u0083\7u\2\2\u0083\u0084\7g\2\2\u0084\b\3\2\2\2\u0085\u0086\7t\2\2\u0086"+
		"\u0087\7g\2\2\u0087\u0088\7v\2\2\u0088\u0089\7w\2\2\u0089\u008a\7t\2\2"+
		"\u008a\u008b\7p\2\2\u008b\n\3\2\2\2\u008c\u008d\7~\2\2\u008d\f\3\2\2\2"+
		"\u008e\u008f\7k\2\2\u008f\u0090\7p\2\2\u0090\u0091\7v\2\2\u0091\16\3\2"+
		"\2\2\u0092\u0093\7f\2\2\u0093\u0094\7q\2\2\u0094\u0095\7w\2\2\u0095\u0096"+
		"\7d\2\2\u0096\u0097\7n\2\2\u0097\u0098\7g\2\2\u0098\20\3\2\2\2\u0099\u009a"+
		"\7e\2\2\u009a\u009b\7j\2\2\u009b\u009c\7c\2\2\u009c\u009d\7t\2\2\u009d"+
		"\22\3\2\2\2\u009e\u009f\7u\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7t\2\2\u00a1"+
		"\u00a2\7k\2\2\u00a2\u00a3\7p\2\2\u00a3\u00a4\7i\2\2\u00a4\24\3\2\2\2\u00a5"+
		"\u00a6\7r\2\2\u00a6\u00a7\7t\2\2\u00a7\u00a8\7q\2\2\u00a8\u00a9\7r\2\2"+
		"\u00a9\u00aa\7q\2\2\u00aa\u00ab\7u\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad"+
		"\7v\2\2\u00ad\u00ae\7k\2\2\u00ae\u00af\7q\2\2\u00af\u00b0\7p\2\2\u00b0"+
		"\26\3\2\2\2\u00b1\u00b2\7u\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4\7v\2\2\u00b4"+
		"\30\3\2\2\2\u00b5\u00b6\7v\2\2\u00b6\u00b7\7w\2\2\u00b7\u00b8\7r\2\2\u00b8"+
		"\u00b9\7n\2\2\u00b9\u00ba\7g\2\2\u00ba\32\3\2\2\2\u00bb\u00bc\7d\2\2\u00bc"+
		"\u00bd\7q\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7n\2\2\u00bf\34\3\2\2\2\u00c0"+
		"\u00c1\7?\2\2\u00c1\36\3\2\2\2\u00c2\u00c3\7*\2\2\u00c3 \3\2\2\2\u00c4"+
		"\u00c5\7+\2\2\u00c5\"\3\2\2\2\u00c6\u00c7\7.\2\2\u00c7$\3\2\2\2\u00c8"+
		"\u00c9\7=\2\2\u00c9&\3\2\2\2\u00ca\u00cb\7}\2\2\u00cb(\3\2\2\2\u00cc\u00cd"+
		"\7\177\2\2\u00cd*\3\2\2\2\u00ce\u00cf\7>\2\2\u00cf\u00d0\7>\2\2\u00d0"+
		",\3\2\2\2\u00d1\u00d2\7@\2\2\u00d2\u00d3\7@\2\2\u00d3.\3\2\2\2\u00d4\u00d5"+
		"\7e\2\2\u00d5\u00d6\7q\2\2\u00d6\u00d7\7p\2\2\u00d7\u00d8\7u\2\2\u00d8"+
		"\u00d9\7v\2\2\u00d9\60\3\2\2\2\u00da\u00db\7O\2\2\u00db\u00dc\7C\2\2\u00dc"+
		"\u00dd\7E\2\2\u00dd\u00de\7J\2\2\u00de\u00df\7K\2\2\u00df\u00e0\7P\2\2"+
		"\u00e0\u00e1\7G\2\2\u00e1\62\3\2\2\2\u00e2\u00e3\7K\2\2\u00e3\u00e4\7"+
		"P\2\2\u00e4\u00e5\7X\2\2\u00e5\u00e6\7C\2\2\u00e6\u00e7\7T\2\2\u00e7\u00e8"+
		"\7K\2\2\u00e8\u00e9\7C\2\2\u00e9\u00ea\7P\2\2\u00ea\u00eb\7V\2\2\u00eb"+
		"\64\3\2\2\2\u00ec\u00ed\7C\2\2\u00ed\u00ee\7V\2\2\u00ee\u00ef\7V\2\2\u00ef"+
		"\u00f0\7T\2\2\u00f0\u00f1\7K\2\2\u00f1\u00f2\7D\2\2\u00f2\u00f3\7W\2\2"+
		"\u00f3\u00f4\7V\2\2\u00f4\u00f5\7G\2\2\u00f5\66\3\2\2\2\u00f6\u00f7\7"+
		"Q\2\2\u00f7\u00f8\7R\2\2\u00f8\u00f9\7G\2\2\u00f9\u00fa\7T\2\2\u00fa\u00fb"+
		"\7C\2\2\u00fb\u00fc\7V\2\2\u00fc\u00fd\7K\2\2\u00fd\u00fe\7Q\2\2\u00fe"+
		"\u00ff\7P\2\2\u00ff\u0100\7U\2\2\u01008\3\2\2\2\u0101\u0102\7G\2\2\u0102"+
		"\u0103\7P\2\2\u0103\u0104\7F\2\2\u0104:\3\2\2\2\u0105\u0106\7x\2\2\u0106"+
		"\u0107\7q\2\2\u0107\u0108\7k\2\2\u0108\u0109\7f\2\2\u0109<\3\2\2\2\u010a"+
		"\u010b\7V\2\2\u010b\u010c\7T\2\2\u010c\u010d\7W\2\2\u010d\u0114\7G\2\2"+
		"\u010e\u010f\7H\2\2\u010f\u0110\7C\2\2\u0110\u0111\7N\2\2\u0111\u0112"+
		"\7U\2\2\u0112\u0114\7G\2\2\u0113\u010a\3\2\2\2\u0113\u010e\3\2\2\2\u0114"+
		">\3\2\2\2\u0115\u0116\7)\2\2\u0116\u0117\5u;\2\u0117\u0118\7)\2\2\u0118"+
		"@\3\2\2\2\u0119\u011d\7$\2\2\u011a\u011c\5u;\2\u011b\u011a\3\2\2\2\u011c"+
		"\u011f\3\2\2\2\u011d\u011b\3\2\2\2\u011d\u011e\3\2\2\2\u011e\u0120\3\2"+
		"\2\2\u011f\u011d\3\2\2\2\u0120\u0121\7$\2\2\u0121B\3\2\2\2\u0122\u0123"+
		"\7p\2\2\u0123\u0124\7k\2\2\u0124\u0125\7n\2\2\u0125D\3\2\2\2\u0126\u012a"+
		"\5q9\2\u0127\u0129\5s:\2\u0128\u0127\3\2\2\2\u0129\u012c\3\2\2\2\u012a"+
		"\u0128\3\2\2\2\u012a\u012b\3\2\2\2\u012b\u012f\3\2\2\2\u012c\u012a\3\2"+
		"\2\2\u012d\u012f\7\62\2\2\u012e\u0126\3\2\2\2\u012e\u012d\3\2\2\2\u012f"+
		"F\3\2\2\2\u0130\u0139\5E#\2\u0131\u0132\7\60\2\2\u0132\u0136\5s:\2\u0133"+
		"\u0135\5s:\2\u0134\u0133\3\2\2\2\u0135\u0138\3\2\2\2\u0136\u0134\3\2\2"+
		"\2\u0136\u0137\3\2\2\2\u0137\u013a\3\2\2\2\u0138\u0136\3\2\2\2\u0139\u0131"+
		"\3\2\2\2\u0139\u013a\3\2\2\2\u013aH\3\2\2\2\u013b\u013c\7\u0080\2\2\u013c"+
		"J\3\2\2\2\u013d\u013e\7\61\2\2\u013e\u013f\7^\2\2\u013fL\3\2\2\2\u0140"+
		"\u0141\7^\2\2\u0141\u0142\7\61\2\2\u0142N\3\2\2\2\u0143\u0144\7/\2\2\u0144"+
		"\u0145\7@\2\2\u0145P\3\2\2\2\u0146\u014a\7<\2\2\u0147\u0148\7#\2\2\u0148"+
		"\u014a\7<\2\2\u0149\u0146\3\2\2\2\u0149\u0147\3\2\2\2\u014aR\3\2\2\2\u014b"+
		"\u014c\7\61\2\2\u014c\u014d\7/\2\2\u014d\u0152\7^\2\2\u014e\u014f\7^\2"+
		"\2\u014f\u0150\7/\2\2\u0150\u0152\7\61\2\2\u0151\u014b\3\2\2\2\u0151\u014e"+
		"\3\2\2\2\u0152T\3\2\2\2\u0153\u0154\7/\2\2\u0154\u0155\7/\2\2\u0155V\3"+
		"\2\2\2\u0156\u0157\7@\2\2\u0157X\3\2\2\2\u0158\u0159\7@\2\2\u0159\u015a"+
		"\7?\2\2\u015aZ\3\2\2\2\u015b\u015c\7>\2\2\u015c\\\3\2\2\2\u015d\u015e"+
		"\7>\2\2\u015e\u015f\7?\2\2\u015f^\3\2\2\2\u0160\u0161\7?\2\2\u0161\u0162"+
		"\7?\2\2\u0162`\3\2\2\2\u0163\u0164\7#\2\2\u0164\u0165\7?\2\2\u0165b\3"+
		"\2\2\2\u0166\u0167\7-\2\2\u0167d\3\2\2\2\u0168\u0169\7/\2\2\u0169f\3\2"+
		"\2\2\u016a\u016b\7,\2\2\u016bh\3\2\2\2\u016c\u016d\7\61\2\2\u016dj\3\2"+
		"\2\2\u016e\u0173\5o8\2\u016f\u0172\5o8\2\u0170\u0172\5s:\2\u0171\u016f"+
		"\3\2\2\2\u0171\u0170\3\2\2\2\u0172\u0175\3\2\2\2\u0173\u0171\3\2\2\2\u0173"+
		"\u0174\3\2\2\2\u0174l\3\2\2\2\u0175\u0173\3\2\2\2\u0176\u0178\t\2\2\2"+
		"\u0177\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u0177\3\2\2\2\u0179\u017a"+
		"\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u017c\b\67\2\2\u017cn\3\2\2\2\u017d"+
		"\u017e\t\3\2\2\u017ep\3\2\2\2\u017f\u0180\t\4\2\2\u0180r\3\2\2\2\u0181"+
		"\u0184\7\62\2\2\u0182\u0184\5q9\2\u0183\u0181\3\2\2\2\u0183\u0182\3\2"+
		"\2\2\u0184t\3\2\2\2\u0185\u0188\5o8\2\u0186\u0188\5s:\2\u0187\u0185\3"+
		"\2\2\2\u0187\u0186\3\2\2\2\u0188v\3\2\2\2\20\2\u0113\u011d\u012a\u012e"+
		"\u0136\u0139\u0149\u0151\u0171\u0173\u0179\u0183\u0187";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}